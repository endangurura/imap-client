import { LOG_LEVEL_ERROR, LOG_LEVEL_WARN, LOG_LEVEL_INFO, LOG_LEVEL_DEBUG } from './common';
var SESSIONCOUNTER = 0;
export default function createDefaultLogger(username, hostname) {
  var session = ++SESSIONCOUNTER;

  var log = function log(level, messages) {
    messages = messages.map(function (msg) {
      return typeof msg === 'function' ? msg() : msg;
    });
    var date = new Date().toISOString();
    var logMessage = "[".concat(date, "][").concat(session, "][").concat(username, "][").concat(hostname, "] ").concat(messages.join(' '));

    if (level === LOG_LEVEL_DEBUG) {
      console.log('[DEBUG]' + logMessage);
    } else if (level === LOG_LEVEL_INFO) {
      console.info('[INFO]' + logMessage);
    } else if (level === LOG_LEVEL_WARN) {
      console.warn('[WARN]' + logMessage);
    } else if (level === LOG_LEVEL_ERROR) {
      console.error('[ERROR]' + logMessage);
    }
  };

  return {
    debug: function debug(msgs) {
      return log(LOG_LEVEL_DEBUG, msgs);
    },
    info: function info(msgs) {
      return log(LOG_LEVEL_INFO, msgs);
    },
    warn: function warn(msgs) {
      return log(LOG_LEVEL_WARN, msgs);
    },
    error: function error(msgs) {
      return log(LOG_LEVEL_ERROR, msgs);
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnZXIuanMiXSwibmFtZXMiOlsiTE9HX0xFVkVMX0VSUk9SIiwiTE9HX0xFVkVMX1dBUk4iLCJMT0dfTEVWRUxfSU5GTyIsIkxPR19MRVZFTF9ERUJVRyIsIlNFU1NJT05DT1VOVEVSIiwiY3JlYXRlRGVmYXVsdExvZ2dlciIsInVzZXJuYW1lIiwiaG9zdG5hbWUiLCJzZXNzaW9uIiwibG9nIiwibGV2ZWwiLCJtZXNzYWdlcyIsIm1hcCIsIm1zZyIsImRhdGUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJsb2dNZXNzYWdlIiwiam9pbiIsImNvbnNvbGUiLCJpbmZvIiwid2FybiIsImVycm9yIiwiZGVidWciLCJtc2dzIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUNFQSxlQURGLEVBRUVDLGNBRkYsRUFHRUMsY0FIRixFQUlFQyxlQUpGLFFBS08sVUFMUDtBQU9BLElBQUlDLGNBQWMsR0FBRyxDQUFyQjtBQUVBLGVBQWUsU0FBU0MsbUJBQVQsQ0FBOEJDLFFBQTlCLEVBQXdDQyxRQUF4QyxFQUFrRDtBQUMvRCxNQUFNQyxPQUFPLEdBQUcsRUFBRUosY0FBbEI7O0FBQ0EsTUFBTUssR0FBRyxHQUFHLFNBQU5BLEdBQU0sQ0FBQ0MsS0FBRCxFQUFRQyxRQUFSLEVBQXFCO0FBQy9CQSxJQUFBQSxRQUFRLEdBQUdBLFFBQVEsQ0FBQ0MsR0FBVCxDQUFhLFVBQUFDLEdBQUc7QUFBQSxhQUFJLE9BQU9BLEdBQVAsS0FBZSxVQUFmLEdBQTRCQSxHQUFHLEVBQS9CLEdBQW9DQSxHQUF4QztBQUFBLEtBQWhCLENBQVg7QUFDQSxRQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixHQUFXQyxXQUFYLEVBQWI7QUFDQSxRQUFNQyxVQUFVLGNBQU9ILElBQVAsZUFBZ0JOLE9BQWhCLGVBQTRCRixRQUE1QixlQUF5Q0MsUUFBekMsZUFBc0RJLFFBQVEsQ0FBQ08sSUFBVCxDQUFjLEdBQWQsQ0FBdEQsQ0FBaEI7O0FBQ0EsUUFBSVIsS0FBSyxLQUFLUCxlQUFkLEVBQStCO0FBQzdCZ0IsTUFBQUEsT0FBTyxDQUFDVixHQUFSLENBQVksWUFBWVEsVUFBeEI7QUFDRCxLQUZELE1BRU8sSUFBSVAsS0FBSyxLQUFLUixjQUFkLEVBQThCO0FBQ25DaUIsTUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsV0FBV0gsVUFBeEI7QUFDRCxLQUZNLE1BRUEsSUFBSVAsS0FBSyxLQUFLVCxjQUFkLEVBQThCO0FBQ25Da0IsTUFBQUEsT0FBTyxDQUFDRSxJQUFSLENBQWEsV0FBV0osVUFBeEI7QUFDRCxLQUZNLE1BRUEsSUFBSVAsS0FBSyxLQUFLVixlQUFkLEVBQStCO0FBQ3BDbUIsTUFBQUEsT0FBTyxDQUFDRyxLQUFSLENBQWMsWUFBWUwsVUFBMUI7QUFDRDtBQUNGLEdBYkQ7O0FBZUEsU0FBTztBQUNMTSxJQUFBQSxLQUFLLEVBQUUsZUFBQUMsSUFBSTtBQUFBLGFBQUlmLEdBQUcsQ0FBQ04sZUFBRCxFQUFrQnFCLElBQWxCLENBQVA7QUFBQSxLQUROO0FBRUxKLElBQUFBLElBQUksRUFBRSxjQUFBSSxJQUFJO0FBQUEsYUFBSWYsR0FBRyxDQUFDUCxjQUFELEVBQWlCc0IsSUFBakIsQ0FBUDtBQUFBLEtBRkw7QUFHTEgsSUFBQUEsSUFBSSxFQUFFLGNBQUFHLElBQUk7QUFBQSxhQUFJZixHQUFHLENBQUNSLGNBQUQsRUFBaUJ1QixJQUFqQixDQUFQO0FBQUEsS0FITDtBQUlMRixJQUFBQSxLQUFLLEVBQUUsZUFBQUUsSUFBSTtBQUFBLGFBQUlmLEdBQUcsQ0FBQ1QsZUFBRCxFQUFrQndCLElBQWxCLENBQVA7QUFBQTtBQUpOLEdBQVA7QUFNRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIExPR19MRVZFTF9FUlJPUixcbiAgTE9HX0xFVkVMX1dBUk4sXG4gIExPR19MRVZFTF9JTkZPLFxuICBMT0dfTEVWRUxfREVCVUdcbn0gZnJvbSAnLi9jb21tb24nXG5cbmxldCBTRVNTSU9OQ09VTlRFUiA9IDBcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlRGVmYXVsdExvZ2dlciAodXNlcm5hbWUsIGhvc3RuYW1lKSB7XG4gIGNvbnN0IHNlc3Npb24gPSArK1NFU1NJT05DT1VOVEVSXG4gIGNvbnN0IGxvZyA9IChsZXZlbCwgbWVzc2FnZXMpID0+IHtcbiAgICBtZXNzYWdlcyA9IG1lc3NhZ2VzLm1hcChtc2cgPT4gdHlwZW9mIG1zZyA9PT0gJ2Z1bmN0aW9uJyA/IG1zZygpIDogbXNnKVxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICBjb25zdCBsb2dNZXNzYWdlID0gYFske2RhdGV9XVske3Nlc3Npb259XVske3VzZXJuYW1lfV1bJHtob3N0bmFtZX1dICR7bWVzc2FnZXMuam9pbignICcpfWBcbiAgICBpZiAobGV2ZWwgPT09IExPR19MRVZFTF9ERUJVRykge1xuICAgICAgY29uc29sZS5sb2coJ1tERUJVR10nICsgbG9nTWVzc2FnZSlcbiAgICB9IGVsc2UgaWYgKGxldmVsID09PSBMT0dfTEVWRUxfSU5GTykge1xuICAgICAgY29uc29sZS5pbmZvKCdbSU5GT10nICsgbG9nTWVzc2FnZSlcbiAgICB9IGVsc2UgaWYgKGxldmVsID09PSBMT0dfTEVWRUxfV0FSTikge1xuICAgICAgY29uc29sZS53YXJuKCdbV0FSTl0nICsgbG9nTWVzc2FnZSlcbiAgICB9IGVsc2UgaWYgKGxldmVsID09PSBMT0dfTEVWRUxfRVJST1IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1tFUlJPUl0nICsgbG9nTWVzc2FnZSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGRlYnVnOiBtc2dzID0+IGxvZyhMT0dfTEVWRUxfREVCVUcsIG1zZ3MpLFxuICAgIGluZm86IG1zZ3MgPT4gbG9nKExPR19MRVZFTF9JTkZPLCBtc2dzKSxcbiAgICB3YXJuOiBtc2dzID0+IGxvZyhMT0dfTEVWRUxfV0FSTiwgbXNncyksXG4gICAgZXJyb3I6IG1zZ3MgPT4gbG9nKExPR19MRVZFTF9FUlJPUiwgbXNncylcbiAgfVxufVxuIl19